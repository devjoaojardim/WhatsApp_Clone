Index: app/src/main/res/drawable/ic_camera_cinza_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_camera_cinza_24dp.xml	(date 1614214284446)
+++ app/src/main/res/drawable/ic_camera_cinza_24dp.xml	(date 1614214284446)
@@ -0,0 +1,13 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:tint="#133D0B"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#133D0B"
+        android:pathData="M12,12m-3.2,0a3.2,3.2 0,1 1,6.4 0a3.2,3.2 0,1 1,-6.4 0" />
+    <path
+        android:fillColor="#133D0B"
+        android:pathData="M9,2L7.17,4L4,4c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2L22,6c0,-1.1 -0.9,-2 -2,-2h-3.17L15,2L9,2zM12,17c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5z" />
+</vector>
Index: app/src/main/res/drawable/ic_photo_cinza_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_photo_cinza_24dp.xml	(date 1614214284388)
+++ app/src/main/res/drawable/ic_photo_cinza_24dp.xml	(date 1614214284388)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:tint="#133D0B"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#133D0B"
+        android:pathData="M21,19V5c0,-1.1 -0.9,-2 -2,-2H5c-1.1,0 -2,0.9 -2,2v14c0,1.1 0.9,2 2,2h14c1.1,0 2,-0.9 2,-2zM8.5,13.5l2.5,3.01L14.5,12l4.5,6H5l3.5,-4.5z" />
+</vector>
Index: app/src/main/java/com/jvapp/whatsappclone/helper/Permissao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/jvapp/whatsappclone/helper/Permissao.java	(date 1614214284308)
+++ app/src/main/java/com/jvapp/whatsappclone/helper/Permissao.java	(date 1614214284308)
@@ -0,0 +1,37 @@
+package com.jvapp.whatsappclone.helper;
+
+import android.app.Activity;
+import android.content.pm.PackageManager;
+import android.os.Build;
+
+import androidx.core.app.ActivityCompat;
+import androidx.core.content.ContextCompat;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class Permissao {
+    public static boolean validarPermissoes(String[] permissoes, Activity activity, int requestCode) {
+        if (Build.VERSION.SDK_INT >= 23) {
+
+            List<String> listaPermissoes = new ArrayList<>();
+            /*Percorre as permisoes passadas,
+             verificando uma a uma
+             se já tem a permissao liberada*/
+            for (String permissao : permissoes) {
+                Boolean temPermissao = ContextCompat.checkSelfPermission(activity, permissao) == PackageManager.PERMISSION_GRANTED;
+                if (!temPermissao) listaPermissoes.add(permissao);
+            }
+            //Verifica se a lista esta vazia, não é necessario solicitar permissao
+            if (listaPermissoes.isEmpty()) return true;
+            String[] novasPermissoes = new String[listaPermissoes.size()];
+            listaPermissoes.toArray(novasPermissoes);
+            //Solicita permissao
+
+            ActivityCompat.requestPermissions(activity, novasPermissoes, requestCode);
+
+
+        }
+        return true;
+    }
+}
Index: app/src/main/java/com/jvapp/whatsappclone/helper/UsuarioFirebase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/jvapp/whatsappclone/helper/UsuarioFirebase.java	(date 1614214284340)
+++ app/src/main/java/com/jvapp/whatsappclone/helper/UsuarioFirebase.java	(date 1614214284340)
@@ -0,0 +1,86 @@
+package com.jvapp.whatsappclone.helper;
+
+import android.net.Uri;
+import android.util.Log;
+
+import androidx.annotation.NonNull;
+
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.auth.UserProfileChangeRequest;
+import com.jvapp.whatsappclone.config.ConfiguracaoFirebase;
+
+public class UsuarioFirebase {
+
+
+    public static String getIndetificadorUsurario() {
+        FirebaseAuth usuario = ConfiguracaoFirebase.getAutenticacao();
+        String email = usuario.getCurrentUser().getEmail();
+        String indetificadorUsuario = Base64Custom.codificarBase64(email);
+
+        return indetificadorUsuario;
+    }
+
+    public static FirebaseUser getUsuarioAtual() {
+
+        FirebaseAuth usuario = ConfiguracaoFirebase.getAutenticacao();
+        return usuario.getCurrentUser();
+    }
+
+    public static boolean atualizarNomeUsuario(String nome) {
+
+        try {
+
+            FirebaseUser user = getUsuarioAtual();
+            UserProfileChangeRequest profile = new UserProfileChangeRequest.Builder()
+                    .setDisplayName(nome)
+                    .build();
+
+
+            user.updateProfile(profile).addOnCompleteListener(new OnCompleteListener<Void>() {
+                @Override
+                public void onComplete(@NonNull Task<Void> task) {
+                    if (!task.isSuccessful()) {
+                        Log.d("Perfil", "Error ao atualizar nome de perfil");
+                    }
+
+                }
+            });
+            return true;
+        } catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+
+    }
+
+    public static boolean atualizarFotoUsuario(Uri url) {
+
+        try {
+
+            FirebaseUser user = getUsuarioAtual();
+            UserProfileChangeRequest profile = new UserProfileChangeRequest.Builder()
+                    .setPhotoUri(url)
+                    .build();
+
+
+            user.updateProfile(profile).addOnCompleteListener(new OnCompleteListener<Void>() {
+                @Override
+                public void onComplete(@NonNull Task<Void> task) {
+                    if (!task.isSuccessful()) {
+                        Log.d("Perfil", "Error ao atualizar foto do perfil");
+                    }
+
+                }
+            });
+            return true;
+        } catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+
+    }
+
+}
Index: app/src/main/java/com/jvapp/whatsappclone/activity/AjusteActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/jvapp/whatsappclone/activity/AjusteActivity.java	(date 1613780205000)
+++ app/src/main/java/com/jvapp/whatsappclone/activity/AjusteActivity.java	(date 1614214284251)
@@ -1,23 +1,219 @@
 package com.jvapp.whatsappclone.activity;
 
+import android.Manifest;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.graphics.Bitmap;
+import android.net.Uri;
+import android.os.Bundle;
+import android.provider.MediaStore;
+import android.view.View;
+import android.widget.EditText;
+import android.widget.ImageButton;
+import android.widget.Toast;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.Toolbar;
 
-import android.os.Bundle;
-
+import com.bumptech.glide.Glide;
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.storage.StorageReference;
+import com.google.firebase.storage.UploadTask;
 import com.jvapp.whatsappclone.R;
+import com.jvapp.whatsappclone.config.ConfiguracaoFirebase;
+import com.jvapp.whatsappclone.helper.Permissao;
+import com.jvapp.whatsappclone.helper.UsuarioFirebase;
+
+import java.io.ByteArrayOutputStream;
+
+import de.hdodenhof.circleimageview.CircleImageView;
 
 public class AjusteActivity extends AppCompatActivity {
+    private static final int SELECAO_CAMERA = 100;
+    private static final int SELECAO_GALERIA = 200;
+    private String[] permissoesNescessarias = new String[]{
+            Manifest.permission.READ_EXTERNAL_STORAGE,
+            Manifest.permission.CAMERA
+    };
+    private ImageButton imageButtonCamera, imageButtonGaleria;
+    private CircleImageView circleImageViewPerfil;
+    private StorageReference storageReference;
+    private String identificadorUsuario;
+    private EditText editTextNomeUsuarioAjuste;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_ajuste);
+        //Configuração iniciais
+        storageReference = ConfiguracaoFirebase.getStorage();
+        identificadorUsuario = UsuarioFirebase.getIndetificadorUsurario();
+
+        imageButtonCamera = findViewById(R.id.imageButtonCamera);
+        imageButtonGaleria = findViewById(R.id.imageButtonGaleria);
+        circleImageViewPerfil = findViewById(R.id.circleImagemViewFotoPerfil);
+        editTextNomeUsuarioAjuste = findViewById(R.id.editTextNomeUsuarioAjuste);
+
+
+        //validar permissoes
+        Permissao.validarPermissoes(permissoesNescessarias, this, 1);
 
         Toolbar toolbar = findViewById(R.id.toolbarPrincipal);
         toolbar.setTitle("Configurações");
         setSupportActionBar(toolbar);
 
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+
+        //recuperar dados do usuario
+        FirebaseUser usuario = UsuarioFirebase.getUsuarioAtual();
+        Uri url = usuario.getPhotoUrl();
+
+        if (url != null) {
+            Glide.with(AjusteActivity.this)
+                    .load(url)
+                    .into(circleImageViewPerfil);
+
+        } else {
+            circleImageViewPerfil.setImageResource(R.drawable.padrao);
+        }
+
+        editTextNomeUsuarioAjuste.setText(usuario.getDisplayName());
+        //Evento de click para selecionar a foto <Abrir camera && abrir galeria>
+        imageButtonCamera.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+                Intent i = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
+                if (i.resolveActivity(getPackageManager()) != null) {
+                    startActivityForResult(i, SELECAO_CAMERA);
+                }
+
+
+            }
+        });
+        imageButtonGaleria.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent i = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
+                if (i.resolveActivity(getPackageManager()) != null) {
+                    startActivityForResult(i, SELECAO_GALERIA);
+                }
+            }
+        });
+
+
+
+    }
+    //Metodo para recupera a foto do perfil
+
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+
+        if (resultCode == RESULT_OK) {
+            Bitmap imagem = null;
+            try {
+                switch (requestCode) {
+                    case SELECAO_CAMERA:
+                        imagem = (Bitmap) data.getExtras().get("data");
+                        break;
+                    case SELECAO_GALERIA:
+                        Uri localImagemSelecionada = data.getData();
+                        imagem = MediaStore.Images.Media.getBitmap(getContentResolver(), localImagemSelecionada);
+                        break;
+                }
+
+                if (imagem != null) {
+                    circleImageViewPerfil.setImageBitmap(imagem);
+
+                    //Recuperar dados da imagem para firebase
+                    ByteArrayOutputStream baos = new ByteArrayOutputStream();
+                    imagem.compress(Bitmap.CompressFormat.JPEG, 70, baos);
+                    byte[] dadosImagem = baos.toByteArray();
+
+
+                    //Salva foto no FireBase
+                    final StorageReference imagemRef = storageReference
+                            .child("imagens")
+                            .child("perfil")
+                            .child(identificadorUsuario)
+                            .child("perfil.jpeg");
+
+                    UploadTask uploadTask = imagemRef.putBytes(dadosImagem);
+                    uploadTask.addOnFailureListener(new OnFailureListener() {
+                        @Override
+                        public void onFailure(@NonNull Exception e) {
+                            Toast.makeText(AjusteActivity.this,
+                                    "Error ao fazer upload da imagem",
+                                    Toast.LENGTH_LONG).show();
+
+                        }
+                    }).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
+                        @Override
+                        public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
+                            Toast.makeText(AjusteActivity.this,
+                                    "Sucesso ao fazer upload da imagem",
+                                    Toast.LENGTH_LONG).show();
+
+                            imagemRef.getDownloadUrl().addOnCompleteListener(new OnCompleteListener<Uri>() {
+                                @Override
+                                public void onComplete(@NonNull Task<Uri> task) {
+                                    Uri url = task.getResult();
+                                    atualizaFotoUsuario(url);
+                                }
+                            });
+                        }
+                    });
+
+                }
+
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+        }
+
+
+    }
+
+    public void atualizaFotoUsuario(Uri url) {
+        UsuarioFirebase.atualizarFotoUsuario(url);
+    }
+
+    @Override
+    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+
+        for (int permissaoResultado : grantResults) {
+            if (permissaoResultado == PackageManager.PERMISSION_DENIED) {
+                alertaValidacaoPermisao();
+            }
+        }
+    }
+
+    private void alertaValidacaoPermisao() {
+        AlertDialog.Builder builder = new AlertDialog.Builder(this);
+        builder.setTitle("Permissões Negadas");
+        builder.setMessage("Para ultilizar o app é necessário aceitar a permmissões");
+        builder.setCancelable(false);
+
+
+        builder.setPositiveButton("Confirmar", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                finish();
+            }
+        });
+        AlertDialog dialog = builder.create();
+        dialog.show();
+
     }
 }
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(date 1613780205000)
+++ app/src/main/AndroidManifest.xml	(date 1614214284216)
@@ -2,6 +2,14 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.jvapp.whatsappclone">
 
+    <uses-feature
+        android:name="android.hardware.camera2"
+        android:required="true" />
+
+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.CAMERA" />
+
+
     <application
         android:allowBackup="true"
         android:icon="@mipmap/ic_launcher"
Index: app/src/main/res/layout/activity_cadastro.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_cadastro.xml	(date 1613780205000)
+++ app/src/main/res/layout/activity_cadastro.xml	(date 1613850747576)
@@ -99,7 +99,8 @@
         android:layout_marginTop="8dp"
         android:layout_marginEnd="32dp"
         android:layout_marginRight="32dp"
-        android:background="@color/colorAccent"
+        android:background="@color/colorTextLogin"
+        android:onClick="validarCadastroUsuario"
         android:text="@string/cadastro"
         android:textColor="@color/colorBackground"
         app:layout_constraintBottom_toBottomOf="parent"
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(date 1613780205000)
+++ app/build.gradle	(date 1614212980562)
@@ -5,11 +5,12 @@
     buildToolsVersion "30.0.2"
     defaultConfig {
         applicationId "com.jvapp.whatsappclone"
-        minSdkVersion 15
+        minSdkVersion 16
         targetSdkVersion 30
         versionCode 1
         versionName "1.0"
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
+        vectorDrawables.useSupportLibrary = true
     }
     buildTypes {
         release {
@@ -29,14 +30,15 @@
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
 
     /*Dependencias Firebase*/
-    implementation platform('com.google.firebase:firebase-core:11.8.0')
-    implementation 'com.google.firebase:firebase-database:11.8.0'
-    implementation 'com.google.firebase:firebase-auth:11.8.0'
-    implementation 'com.google.firebase:firebase-storage:11.8.0'
+    implementation platform('com.google.firebase:firebase-bom:26.4.0')
+    implementation 'com.google.firebase:firebase-database:19.6.0'
+    implementation 'com.google.firebase:firebase-auth:20.0.2'
+    implementation 'com.google.firebase:firebase-storage:19.2.1'
     implementation 'com.google.android.material:material:1.3.0'
     implementation 'com.ogaclejapan.smarttablayout:library:2.0.0@aar'
     implementation 'com.ogaclejapan.smarttablayout:utils-v4:2.0.0@aar'
     implementation 'de.hdodenhof:circleimageview:3.1.0'
+    implementation 'com.firebaseui:firebase-ui-storage:6.4.0'
 
 
 }
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(date 1613780205000)
+++ app/src/main/res/values/colors.xml	(date 1613850281038)
@@ -3,7 +3,7 @@
     <color name="colorPrimary">#008577</color>
     <color name="colorBackground">#008577</color>
     <color name="colorPrimaryDark">#00574B</color>
-    <color name="colorAccent">#FFFFFF</color>
+    <color name="colorAccent">#000000</color>
     <color name="colorTextLogin">#FFFFFF</color>
     <color name="cinza_claro">#EEEEEE</color>
 </resources>
Index: app/src/main/res/layout/activity_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_login.xml	(date 1613780205000)
+++ app/src/main/res/layout/activity_login.xml	(date 1614214284423)
@@ -79,7 +79,7 @@
         android:layout_marginTop="8dp"
         android:layout_marginEnd="32dp"
         android:layout_marginRight="32dp"
-        android:background="@color/colorAccent"
+        android:background="@color/colorTextLogin"
         android:text="@string/button_entrar"
         android:textColor="@color/colorPrimaryDark"
         app:layout_constraintBottom_toTopOf="@+id/textView"
Index: app/src/main/res/layout/activity_ajuste.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_ajuste.xml	(date 1613780205000)
+++ app/src/main/res/layout/activity_ajuste.xml	(date 1614213186448)
@@ -14,8 +14,8 @@
 
     <de.hdodenhof.circleimageview.CircleImageView
         android:id="@+id/circleImagemViewFotoPerfil"
-        android:layout_width="160dp"
-        android:layout_height="160dp"
+        android:layout_width="230dp"
+        android:layout_height="230dp"
         android:layout_marginBottom="16dp"
         android:src="@drawable/padrao"
         app:layout_constraintBottom_toTopOf="@+id/linearLayout"
@@ -48,7 +48,7 @@
         app:layout_constraintTop_toBottomOf="@+id/circleImagemViewFotoPerfil">
 
         <EditText
-            android:id="@+id/editText"
+            android:id="@+id/editTextNomeUsuarioAjuste"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_weight="1"
@@ -83,4 +83,29 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/linearLayout" />
 
+    <ImageButton
+        android:id="@+id/imageButtonCamera"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintBottom_toBottomOf="@+id/circleImagemViewFotoPerfil"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toEndOf="@+id/imageButtonGaleria"
+        app:layout_constraintTop_toTopOf="@+id/circleImagemViewFotoPerfil"
+        app:layout_constraintVertical_bias="0.95"
+        app:srcCompat="@drawable/ic_camera_cinza_24dp" />
+
+    <ImageButton
+        android:id="@+id/imageButtonGaleria"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintBottom_toBottomOf="@+id/circleImagemViewFotoPerfil"
+        app:layout_constraintEnd_toStartOf="@+id/imageButtonCamera"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintHorizontal_chainStyle="packed"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="@+id/circleImagemViewFotoPerfil"
+        app:layout_constraintVertical_bias="0.95"
+        app:srcCompat="@drawable/ic_photo_cinza_24dp" />
+
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/jvapp/whatsappclone/model/Usuario.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/jvapp/whatsappclone/model/Usuario.java	(date 1613780205000)
+++ app/src/main/java/com/jvapp/whatsappclone/model/Usuario.java	(date 1614214284160)
@@ -1,20 +1,35 @@
 package com.jvapp.whatsappclone.model;
 
 import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.Exclude;
 import com.jvapp.whatsappclone.config.ConfiguracaoFirebase;
 
 public class Usuario {
+
+    private String id;
     private String nome;
     private String email;
     private String senha;
 
     public Usuario() {
     }
+
     public void salvar(){
-        DatabaseReference firebase = ConfiguracaoFirebase.getFirebase();
-        firebase.child("usuarios")
-                .child(this.email)
-                .setValue(this);
+
+
+        DatabaseReference firebaseRef = ConfiguracaoFirebase.getFirebase();
+        DatabaseReference usuario = firebaseRef.child("usuarios").child(getId());
+        usuario.setValue(this);
+
+    }
+
+    @Exclude
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
     }
 
     public String getNome() {
@@ -33,6 +48,7 @@
         this.email = email;
     }
 
+    @Exclude
     public String getSenha() {
         return senha;
     }
Index: app/src/main/java/com/jvapp/whatsappclone/config/ConfiguracaoFirebase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/jvapp/whatsappclone/config/ConfiguracaoFirebase.java	(date 1613780205000)
+++ app/src/main/java/com/jvapp/whatsappclone/config/ConfiguracaoFirebase.java	(date 1614214284276)
@@ -3,10 +3,13 @@
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.storage.FirebaseStorage;
+import com.google.firebase.storage.StorageReference;
 
 public class ConfiguracaoFirebase {
     private static FirebaseAuth autenticacao;
     private static DatabaseReference referenciaFirebase;
+    private static StorageReference storage;
 
     //retorna a instancia do FirebaseDataBase
     public static DatabaseReference getFirebase(){
@@ -27,4 +30,11 @@
 
         return autenticacao;
     }
+
+    public static StorageReference getStorage() {
+        if (storage == null) {
+            storage = FirebaseStorage.getInstance().getReference();
+        }
+        return storage;
+    }
 }
Index: app/src/main/java/com/jvapp/whatsappclone/activity/CadastroActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/jvapp/whatsappclone/activity/CadastroActivity.java	(date 1613780205000)
+++ app/src/main/java/com/jvapp/whatsappclone/activity/CadastroActivity.java	(date 1614214284184)
@@ -1,13 +1,12 @@
 package com.jvapp.whatsappclone.activity;
 
-import androidx.annotation.NonNull;
-import androidx.appcompat.app.AppCompatActivity;
-
 import android.os.Bundle;
 import android.view.View;
-import android.widget.Button;
 import android.widget.Toast;
 
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
 import com.google.android.material.textfield.TextInputEditText;
@@ -19,14 +18,12 @@
 import com.jvapp.whatsappclone.R;
 import com.jvapp.whatsappclone.config.ConfiguracaoFirebase;
 import com.jvapp.whatsappclone.helper.Base64Custom;
+import com.jvapp.whatsappclone.helper.UsuarioFirebase;
 import com.jvapp.whatsappclone.model.Usuario;
 
 public class CadastroActivity extends AppCompatActivity {
-    private TextInputEditText textNome, textEmail, textSenha;
-    private Button buttonCadastro;
-
-    //Atributos Autenticação
-    private FirebaseAuth auth;
+    private TextInputEditText campoNome, campoEmail, campoSenha;
+    private FirebaseAuth autenticacao;
     private Usuario usuario;
 
     @Override
@@ -34,89 +31,99 @@
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_cadastro);
 
-        textNome = findViewById(R.id.textNome);
-        textEmail = findViewById(R.id.textEmail1);
-        textSenha = findViewById(R.id.textSenha1);
-        buttonCadastro = findViewById(R.id.buttonCadastro);
-
-        buttonCadastro.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                //Recupera o que usuario digitou e transforma em String
-                String textoNome = textNome.getText().toString();
-                String textoEmail = textEmail.getText().toString();
-                String textoSenha = textSenha.getText().toString();
-
-                //Validar se os campos foram preenchidos
-                if(!textoNome.isEmpty()){
-                    if(!textoEmail.isEmpty()){
-                        if(!textoSenha.isEmpty()){
-
-                            usuario = new Usuario();
-                            usuario.setNome(textoNome);
-                            usuario.setEmail(textoEmail);
-                            usuario.setSenha(textoSenha);
-                            cadastrarUsuario();
+        campoNome = findViewById(R.id.textNome);
+        campoEmail = findViewById(R.id.textEmail1);
+        campoSenha = findViewById(R.id.textSenha1);
 
-
-                        }else{
-                            Toast.makeText(CadastroActivity.this,"Preencha a senha",
-                                    Toast.LENGTH_LONG).show();
-                        }
+    }
 
-                    }else{
-                        Toast.makeText(CadastroActivity.this,"Preencha o email",
-                                Toast.LENGTH_LONG).show();
-                    }
+    public void cadastrarUsuario(final Usuario usuario) {
 
-                }else{
-                    Toast.makeText(CadastroActivity.this,"Preencha o nome",
-                            Toast.LENGTH_LONG).show();
-
-                }
-                //Fim da Validação
-
-            }
-        });
-
-
-
-    }
-    public void cadastrarUsuario(){
-        auth = ConfiguracaoFirebase.getAutenticacao();
-        auth.createUserWithEmailAndPassword(
+        autenticacao = ConfiguracaoFirebase.getAutenticacao();
+        autenticacao.createUserWithEmailAndPassword(
                 usuario.getEmail(), usuario.getSenha()
-        ).addOnCompleteListener(new OnCompleteListener<AuthResult>() {
+        ).addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
             @Override
             public void onComplete(@NonNull Task<AuthResult> task) {
-                if(task.isSuccessful()){
-                    //Salva usuario no banco de Dados
-                    String email = Base64Custom.codificarBase64(usuario.getEmail());
-                    usuario.setEmail(email);
-                    usuario.salvar();
-                    finish();
+
+                if (task.isSuccessful()) {
+
+                    Toast.makeText(CadastroActivity.this,
+                            "Sucesso ao cadastrar usuário!",
+                            Toast.LENGTH_SHORT).show();
+                    UsuarioFirebase.atualizarNomeUsuario(usuario.getNome());
+                    finish();
+
+                    try {
+
+                        String idUsuario = Base64Custom.codificarBase64(usuario.getEmail());
+                        usuario.setId(idUsuario);
+                        usuario.salvar();
+
+                    } catch (Exception e) {
+                        e.printStackTrace();
+                    }
 
-                }else{
+                } else {
+
                     String excecao = "";
                     try {
                         throw task.getException();
-                    }catch (FirebaseAuthWeakPasswordException e){
+                    } catch (FirebaseAuthWeakPasswordException e) {
                         excecao = "Digite uma senha mais forte!";
-                    }catch (FirebaseAuthInvalidCredentialsException e){
-                        excecao = "Por favor, digite um e-mail válido!";
-
-                    }catch (FirebaseAuthUserCollisionException e){
-                        excecao = "Esse email ja foi cadastrado";
-
+                    } catch (FirebaseAuthInvalidCredentialsException e) {
+                        excecao = "Por favor, digite um e-mail válido";
+                    } catch (FirebaseAuthUserCollisionException e) {
+                        excecao = "Este conta já foi cadastrada";
                     }catch (Exception e){
                         excecao = "Erro ao cadastrar usuário: " + e.getMessage();
                         e.printStackTrace();
                     }
 
-                    Toast.makeText(CadastroActivity.this,excecao,
-                            Toast.LENGTH_LONG).show();
+                    Toast.makeText(CadastroActivity.this,
+                            excecao,
+                            Toast.LENGTH_SHORT).show();
+
                 }
+
             }
         });
+
+    }
+
+    public void validarCadastroUsuario(View view) {
+
+        //Recuperar textos dos campos
+        String textoNome = campoNome.getText().toString();
+        String textoEmail = campoEmail.getText().toString();
+        String textoSenha = campoSenha.getText().toString();
+
+        if (!textoNome.isEmpty()) {//verifica nome
+            if (!textoEmail.isEmpty()) {//verifica e-mail
+                if (!textoSenha.isEmpty()) {
+
+                    usuario = new Usuario();
+                    usuario.setNome(textoNome);
+                    usuario.setEmail(textoEmail);
+                    usuario.setSenha(textoSenha);
+
+                    cadastrarUsuario(usuario);
+
+                } else {
+                    Toast.makeText(CadastroActivity.this,
+                            "Preencha a senha!",
+                            Toast.LENGTH_SHORT).show();
+                }
+            } else {
+                Toast.makeText(CadastroActivity.this,
+                        "Preencha o email!",
+                        Toast.LENGTH_SHORT).show();
+            }
+        } else {
+            Toast.makeText(CadastroActivity.this,
+                    "Preencha o nome!",
+                    Toast.LENGTH_SHORT).show();
+        }
+
     }
 }
